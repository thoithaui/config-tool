input {
  beats {
    port => $port
  }
}
filter {

  if[event][dataset] == "mysql.slowlog" {
    mutate {
      gsub => ["message","[\n]","       "]
    }
    grok {
      match => { "message" => "#\s*User@Host:\s*%{DATA:user_host}\s*Id:\s*%{NUMBER:id_prosess}\s*#\s*Query_time:\s*%{DATA:query_time}\s*Lock_time:\s*%{DATA:lock_time}\s*Rows_sent:\s*%{NUMBER:rows_sent}\s*Rows_examined:\s*%{NUMBER:rows_examined}%{DATA:database}SET\s*timestamp=%{DATA:timestamp};\s*%{GREEDYDATA:query}" }
    }
    date {
      match => ["timestamp", "UNIX"]
      target => "@timestamp"
    }
  }
  if[event][dataset] == "mysql.error" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp}\s*%{INT:thread}\s*\[%{DATA:level}\]\s*\[%{DATA:error_code}\]\s*\[%{DATA:subsystem}\]\s*%{GREEDYDATA:error_detail}" }
    }
    date {
      match => ["timestamp", "ISO8601"]
      target => "@timestamp"
    }
  }


  if [fields][category]=="catalinalog" {
    grok{
        pattern_definitions =>  {"MY_DATE_PATTERN" => "%{MONTHDAY}-%{MONTH}-%{YEAR} %{HOUR}:?%{MINUTE}(?::?%{SECOND})"}
        match => {"message" => ["%{MY_DATE_PATTERN:timestamp}%{SPACE}%{LOGLEVEL:loglevel}%{SPACE}\[%{NOTSPACE:thread}\]%{SPACE}%{NOTSPACE:class}%{SPACE}%{GREEDYDATA:logmessage}"]}
        }
    date {match => ["timestamp" , "dd-MMM-yyyy HH:mm:ss.SSS"]}
  }
  if [fields][category]=="catalinaout" {
    grok {
        pattern_definitions =>  { "MY_DATE_PATTERN" => "%{MONTHDAY}-%{MONTH}-%{YEAR} %{HOUR}:?%{MINUTE}(?::?%{SECOND})" }
        match =>  {"message" => [ "%{TIMESTAMP_ISO8601:timestamp} - %{NOTSPACE:thread} - %{GREEDYDATA:logmessage}" ,
                                  "%{MY_DATE_PATTERN:timestamp}%{SPACE}%{LOGLEVEL:loglevel}%{SPACE}\[%{NOTSPACE:thread}\]%{SPACE}%{NOTSPACE:class}%{SPACE}%{GREEDYDATA:logmessage}"
                                ]
        }
      }
      date {match => [ "timestamp" , "dd-MMM-yyyy HH:mm:ss.SSS", "yyyy-MM-dd HH:mm:ss" ]}
    }
  if [fields][category]=="localhostlog" {
    grok {
        pattern_definitions => { "MY_DATE_PATTERN" => "%{MONTHDAY}-%{MONTH}-%{YEAR} %{HOUR}:?%{MINUTE}(?::?%{SECOND})" }
        match => {  "message" => ["%{MY_DATE_PATTERN:timestamp}%{SPACE}%{LOGLEVEL:loglevel}%{SPACE}\[%{NOTSPACE:thread}\]%{SPACE}%{NOTSPACE:class}%{SPACE}%{GREEDYDATA:logmessage}"]}
      }
      date {match => [ "timestamp" , "dd-MMM-yyyy HH:mm:ss.SSS"]}
    }
  if [fields][category]=="localhostaccesslog" {
    grok {
        pattern_definitions => { "MY_DATE_PATTERN" => "%{MONTHDAY}-%{MONTH}-%{YEAR} %{HOUR}:?%{MINUTE}(?::?%{SECOND})" }
        match => {"message" =>    [ "%{IPORHOST:clientip} %{NOTSPACE:clientid} %{NOTSPACE:userid} \[%{HTTPDATE:timestamp}] \"%{NOTSPACE:method} %{NOTSPACE:requesturl} HTTP/%{NUMBER:httpversion}\" %{NUMBER:status} %{NUMBER:bytessent}" ,
                                    "%{IPORHOST:clientip} %{NOTSPACE:clientid} %{NOTSPACE:userid} \[%{HTTPDATE:timestamp}] \"%{NOTSPACE:method} %{NOTSPACE:requesturl} HTTP/%{NUMBER:httpversion}\" %{NUMBER:status} -" ,
                                    "%{IPORHOST:clientip} %{NOTSPACE:clientid} %{NOTSPACE:userid} \[%{HTTPDATE:timestamp}] \"%{DATA:request}\" %{NUMBER:status} %{NUMBER:bytessent}" ,
                                    "%{IPORHOST:clientip} %{NOTSPACE:clientid} %{NOTSPACE:userid} \[%{HTTPDATE:timestamp}] \"%{DATA:request}\" %{NUMBER:status} -"
                                  ]}
        }
      date {match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z"]}
      geoip { source => "[clientip]"
              ecs_compatibility => disabled
            }
    }
  if [fields][category]=="app2log" {
    grok {
        pattern_definitions => { "MY_DATE_PATTERN" => "%{MONTHDAY}-%{MONTH}-%{YEAR} %{HOUR}:?%{MINUTE}(?::?%{SECOND})" }
        match => {"message" => ["%{TIMESTAMP_ISO8601:timestamp}%{SPACE}%{LOGLEVEL:loglevel}%{SPACE}%{NUMBER:number}%{SPACE}---%{SPACE}\[%{NOTSPACE:thread}\]%{SPACE}%{NOTSPACE:class}%{SPACE}\:%{SPACE}%{GREEDYDATA:logmessage}"]}
      }
      date {match => [ "timestamp" , "yyyy-MM-dd HH:mm:ss.SSS" ]}
    }
  if [fields][category]=="applog" {
    grok {
        pattern_definitions => { "MY_DATE_PATTERN" => "%{MONTHDAY}-%{MONTH}-%{YEAR} %{HOUR}:?%{MINUTE}(?::?%{SECOND})" }
        match => {"message" => ["%{TIMESTAMP_ISO8601:timestamp}%{SPACE}%{LOGLEVEL:loglevel}%{SPACE}%{NUMBER:number}%{SPACE}---%{SPACE}\[%{NOTSPACE:thread}\]%{SPACE}%{NOTSPACE:class}%{SPACE}\:%{SPACE}%{GREEDYDATA:logmessage}"]}
      }
      date {match => [ "timestamp" , "yyyy-MM-dd HH:mm:ss.SSS"]}
    }

}

output {
  #stdout {
  #  codec => rubydebug{
  #    metadata => true
  #  }
  #}


  if[event][dataset] == "mysql.error" {
    elasticsearch {
      hosts => ["$elastic"]
      user => "$user"
      password => "$pass"
      data_stream => "true"
      data_stream_type => "logs"
      data_stream_dataset => "mysql"
      data_stream_namespace => "error"
      ssl => true
      ssl_certificate_verification => false
    }
  }
  if[event][dataset] == "mysql.slowlog" {
    elasticsearch {
      hosts => ["$elastic"]
      user => "$user"
      password => "$pass"
      data_stream => "true"
      data_stream_type => "logs"
      data_stream_dataset => "mysql"
      data_stream_namespace => "slowlog"
      ssl => true
      ssl_certificate_verification => false
    }
  }
  if[event][dataset] == "mysql.status" {
    elasticsearch {
      hosts => ["$elastic"]
      user => "$user"
      password => "$pass"
      data_stream => "true"
      data_stream_type => "metrics"
      data_stream_dataset => "mysql"
      data_stream_namespace => "status"
      ssl => true
      ssl_certificate_verification => false
    }
  }
  if[event][dataset] == "mysql.process" {
    elasticsearch {
      hosts => ["$elastic"]
      user => "$user"
      password => "$pass"
      data_stream => "true"
      data_stream_type => "metrics"
      data_stream_dataset => "mysql"
      data_stream_namespace => "process"
      ssl => true
      ssl_certificate_verification => false
    }
  }


  if[event][dataset] == "mongodb.collstats" {
    elasticsearch {
      hosts => ["$elastic"]
      user => "$user"
      password => "$pass"
      data_stream => "true"
      data_stream_type => "metrics"
      data_stream_dataset => "mongodb"
      data_stream_namespace => "collstats"
      ssl => true
      ssl_certificate_verification => false
    }
  }
  if[event][dataset] == "mongodb.replstatus" {
    elasticsearch {
      hosts => ["$elastic"]
      user => "$user"
      password => "$pass"
      data_stream => "true"
      data_stream_type => "metrics"
      data_stream_dataset => "mongodb"
      data_stream_namespace => "replstatus"
      ssl => true
      ssl_certificate_verification => false
    }
  }
  if[event][dataset] == "mongodb.dbstats" {
    elasticsearch {
      hosts => ["$elastic"]
      user => "$user"
      password => "$pass"
      data_stream => "true"
      data_stream_type => "metrics"
      data_stream_dataset => "mongodb"
      data_stream_namespace => "dbstats"
      ssl => true
      ssl_certificate_verification => false
    }
  }
  if[event][dataset] == "mongodb.metrics" {
    elasticsearch {
      hosts => ["$elastic"]
      user => "$user"
      password => "$pass"
      data_stream => "true"
      data_stream_type => "metrics"
      data_stream_dataset => "mongodb"
      data_stream_namespace => "metrics"
      ssl => true
      ssl_certificate_verification => false
    }
  }
  if[event][dataset] == "mongodb.status" {
    elasticsearch {
      hosts => ["$elastic"]
      user => "$user"
      password => "$pass"
      data_stream => "true"
      data_stream_type => "metrics"
      data_stream_dataset => "mongodb"
      data_stream_namespace => "status"
      ssl => true
      ssl_certificate_verification => false
    }
  }


  if[event][dataset] == "system.process" {
    elasticsearch {
      hosts => ["$elastic"]
      user => "$user"
      password => "$pass"
      data_stream => "true"
      data_stream_type => "metrics"
      data_stream_dataset => "system"
      data_stream_namespace => "process"
      ssl => true
      ssl_certificate_verification => false
    }
  }
  if[event][dataset] == "system.process.summary" {
    elasticsearch {
      hosts => ["$elastic"]
      user => "$user"
      password => "$pass"
      data_stream => "true"
      data_stream_type => "metrics"
      data_stream_dataset => "system"
      data_stream_namespace => "process-summary"
      ssl => true
      ssl_certificate_verification => false
    }
  }
  if[event][dataset] == "system.network" {
    elasticsearch {
      hosts => ["$elastic"]
      user => "$user"
      password => "$pass"
      data_stream => "true"
      data_stream_type => "metrics"
      data_stream_dataset => "system"
      data_stream_namespace => "network"
      ssl => true
      ssl_certificate_verification => false
    }
  }
  if[event][dataset] == "system.memory" {
    elasticsearch {
      hosts => ["$elastic"]
      user => "$user"
      password => "$pass"
      data_stream => "true"
      data_stream_type => "metrics"
      data_stream_dataset => "system"
      data_stream_namespace => "memory"
      ssl => true
      ssl_certificate_verification => false
    }
  }
  if[event][dataset] == "system.cpu" {
    elasticsearch {
      hosts => ["$elastic"]
      user => "$user"
      password => "$pass"
      data_stream => "true"
      data_stream_type => "metrics"
      data_stream_dataset => "system"
      data_stream_namespace => "cpu"
      ssl => true
      ssl_certificate_verification => false
    }
  }
  if[event][dataset] == "system.socket.summary" {
    elasticsearch {
      hosts => ["$elastic"]
      user => "$user"
      password => "$pass"
      data_stream => "true"
      data_stream_type => "metrics"
      data_stream_dataset => "system"
      data_stream_namespace => "socket-summary"
      ssl => true
      ssl_certificate_verification => false
    }
  }
  if[event][dataset] == "system.fsstat" {
    elasticsearch {
      hosts => ["$elastic"]
      user => "$user"
      password => "$pass"
      data_stream => "true"
      data_stream_type => "metrics"
      data_stream_dataset => "system"
      data_stream_namespace => "fsstat"
      ssl => true
      ssl_certificate_verification => false
    }
  }
  if[event][dataset] == "system.filesystem" {
    elasticsearch {
      hosts => ["$elastic"]
      user => "$user"
      password => "$pass"
      data_stream => "true"
      data_stream_type => "metrics"
      data_stream_dataset => "system"
      data_stream_namespace => "filesystem"
      ssl => true
      ssl_certificate_verification => false
    }
  }

  if[event][dataset] == "system.diskio" {
    elasticsearch {
      hosts => ["$elastic"]
      user => "$user"
      password => "$pass"
      data_stream => "true"
      data_stream_type => "metrics"
      data_stream_dataset => "system"
      data_stream_namespace => "diskio"
      ssl => true
      ssl_certificate_verification => false
    }
  }

  if [fields][category]=="catalinalog" {
      elasticsearch {
          hosts => ["$elastic"]
          user => "$user"
          password => "$pass"
          data_stream => "true"
          data_stream_type => "logs"
          data_stream_dataset => "tomcat"
          data_stream_namespace => "catalinalog"
          ssl => true
          ssl_certificate_verification => false
      }
  }
  if [fields][category]=="catalinaout" {
      elasticsearch {
          hosts => ["$elastic"]
          user => "$user"
          password => "$pass"
          data_stream => "true"
          data_stream_type => "logs"
          data_stream_dataset => "tomcat"
          data_stream_namespace => "catalinaout"
          ssl => true
          ssl_certificate_verification => false
      }
  }
  if [fields][category]=="localhostlog" {
      elasticsearch {
          hosts => ["$elastic"]
          user => "$user"
          password => "$pass"
          data_stream => "true"
          data_stream_type => "logs"
          data_stream_dataset => "tomcat"
          data_stream_namespace => "localhostlog"
          ssl => true
          ssl_certificate_verification => false
      }
  }
  if [fields][category]=="localhostaccesslog" {
      elasticsearch {
          hosts => ["$elastic"]
          user => "$user"
          password => "$pass"
          data_stream => "true"
          data_stream_type => "logs"
          data_stream_dataset => "tomcat"
          data_stream_namespace => "localhostaccesslog"
          ssl => true
          ssl_certificate_verification => false
      }
  }
  if [fields][category]=="app2log" {
      elasticsearch {
          hosts => ["$elastic"]
          user => "$user"
          password => "$pass"
          data_stream => "true"
          data_stream_type => "logs"
          data_stream_dataset => "tomcat"
          data_stream_namespace => "app2log"
          ssl => true
          ssl_certificate_verification => false
      }
  }
  if [fields][category]=="applog" {
      elasticsearch {
          hosts => ["$elastic"]
          user => "$user"
          password => "$pass"
          data_stream => "true"
          data_stream_type => "logs"
          data_stream_dataset => "tomcat"
          data_stream_namespace => "applog"
          ssl => true
          ssl_certificate_verification => false
      }
  }
  if [event][module]=="tomcat" {
    elasticsearch {
      hosts => ["$elastic"]
      user => "$user"
      password => "$pass"
      data_stream => "true"
      data_stream_type => "metrics"
      data_stream_dataset => "tomcat"
      data_stream_namespace => "metric"
      ssl => true
      ssl_certificate_verification => false
    }
  }
}